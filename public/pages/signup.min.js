webpackJsonp([4],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/* global window */
	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Form = __webpack_require__(534);
	var React = __webpack_require__(181);
	var ReactDOM = __webpack_require__(2);
	
	var Page = function () {
	    function Page() {
	        _classCallCheck(this, Page);
	    }
	
	    _createClass(Page, null, [{
	        key: 'blastoff',
	        value: function blastoff() {
	
	            this.mainElement = ReactDOM.render(React.createElement(Form, null), window.document.getElementById('app-mount'));
	        }
	    }]);
	
	    return Page;
	}();
	
	module.exports = Page;
	
	/* $lab:coverage:off$ */
	if (!module.parent) {
	    window.page = Page;
	    Page.blastoff();
	}
	/* $lab:coverage:on$ */
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))

/***/ },

/***/ 401:
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(181);
	
	var propTypes = {
	    type: React.PropTypes.oneOf(['success', 'info', 'warning', 'danger']),
	    onClose: React.PropTypes.func,
	    message: React.PropTypes.string
	};
	
	var Alert = function (_React$Component) {
	    _inherits(Alert, _React$Component);
	
	    function Alert() {
	        _classCallCheck(this, Alert);
	
	        return _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).apply(this, arguments));
	    }
	
	    _createClass(Alert, [{
	        key: 'render',
	        value: function render() {
	
	            var close = void 0;
	
	            if (this.props.onClose) {
	                close = React.createElement(
	                    'button',
	                    {
	                        type: 'button',
	                        className: 'close',
	                        onClick: this.props.onClose },
	                    '\xD7'
	                );
	            }
	
	            return React.createElement(
	                'div',
	                { className: 'alert alert-' + this.props.type },
	                close,
	                this.props.message
	            );
	        }
	    }]);
	
	    return Alert;
	}(React.Component);
	
	Alert.propTypes = propTypes;
	
	module.exports = Alert;

/***/ },

/***/ 534:
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Actions = __webpack_require__(535);
	var Alert = __webpack_require__(401);
	var Button = __webpack_require__(402);
	var ControlGroup = __webpack_require__(403);
	var React = __webpack_require__(181);
	var Spinner = __webpack_require__(405);
	var Store = __webpack_require__(537);
	var TextControl = __webpack_require__(406);
	
	var Form = function (_React$Component) {
	    _inherits(Form, _React$Component);
	
	    function Form(props) {
	        _classCallCheck(this, Form);
	
	        var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));
	
	        _this.input = {};
	        _this.state = Store.getState();
	        return _this;
	    }
	
	    _createClass(Form, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	
	            this.unsubscribeStore = Store.subscribe(this.onStoreChange.bind(this));
	
	            if (this.input.name) {
	                this.input.name.focus();
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	
	            this.unsubscribeStore();
	        }
	    }, {
	        key: 'onStoreChange',
	        value: function onStoreChange() {
	
	            this.setState(Store.getState());
	        }
	    }, {
	        key: 'handleSubmit',
	        value: function handleSubmit(event) {
	
	            event.preventDefault();
	            event.stopPropagation();
	
	            Actions.sendRequest({
	                name: this.input.name.value(),
	                username: this.input.username.value(),
	                password: this.input.password.value(),
	                email: this.input.email.value()
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;
	
	            var alert = [];
	
	            if (this.state.success) {
	                alert = React.createElement(Alert, {
	                    type: 'success',
	                    message: 'Success. Redirecting...'
	                });
	            } else if (this.state.error) {
	                alert = React.createElement(Alert, {
	                    type: 'danger',
	                    message: this.state.error
	                });
	            }
	
	            var formElements = void 0;
	
	            if (!this.state.success) {
	                formElements = React.createElement(
	                    'fieldset',
	                    null,
	                    React.createElement(TextControl, {
	                        ref: function ref(c) {
	                            return _this2.input.name = c;
	                        },
	                        name: 'name',
	                        label: 'Name',
	                        hasError: this.state.hasError.name,
	                        help: this.state.help.name,
	                        disabled: this.state.loading
	                    }),
	                    React.createElement(TextControl, {
	                        ref: function ref(c) {
	                            return _this2.input.email = c;
	                        },
	                        name: 'email',
	                        label: 'Email',
	                        hasError: this.state.hasError.email,
	                        help: this.state.help.email,
	                        disabled: this.state.loading
	                    }),
	                    React.createElement(TextControl, {
	                        ref: function ref(c) {
	                            return _this2.input.username = c;
	                        },
	                        name: 'username',
	                        label: 'Username',
	                        hasError: this.state.hasError.username,
	                        help: this.state.help.username,
	                        disabled: this.state.loading
	                    }),
	                    React.createElement(TextControl, {
	                        ref: function ref(c) {
	                            return _this2.input.password = c;
	                        },
	                        name: 'password',
	                        label: 'Password',
	                        type: 'password',
	                        hasError: this.state.hasError.password,
	                        help: this.state.help.password,
	                        disabled: this.state.loading
	                    }),
	                    React.createElement(
	                        ControlGroup,
	                        { hideLabel: true, hideHelp: true },
	                        React.createElement(
	                            Button,
	                            {
	                                type: 'submit',
	                                inputClasses: { 'btn-primary': true },
	                                disabled: this.state.loading },
	                            'Create my account',
	                            React.createElement(Spinner, { space: 'left', show: this.state.loading })
	                        )
	                    )
	                );
	            }
	
	            return React.createElement(
	                'section',
	                null,
	                React.createElement(
	                    'h1',
	                    { className: 'page-header' },
	                    'Sign up'
	                ),
	                React.createElement(
	                    'form',
	                    { onSubmit: this.handleSubmit.bind(this) },
	                    alert,
	                    formElements
	                )
	            );
	        }
	    }]);
	
	    return Form;
	}(React.Component);
	
	module.exports = Form;

/***/ },

/***/ 535:
/***/ function(module, exports, __webpack_require__) {

	/* global window */
	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ApiActions = __webpack_require__(358);
	var Constants = __webpack_require__(536);
	var Store = __webpack_require__(537);
	
	var Actions = function () {
	    function Actions() {
	        _classCallCheck(this, Actions);
	    }
	
	    _createClass(Actions, null, [{
	        key: 'sendRequest',
	        value: function sendRequest(data) {
	
	            ApiActions.post('/api/signup', data, Store, Constants.REGISTER, Constants.REGISTER_RESPONSE, function (err, response) {
	
	                if (!err) {
	                    window.location.href = '/account';
	                }
	            });
	        }
	    }]);
	
	    return Actions;
	}();
	
	;
	
	module.exports = Actions;

/***/ },

/***/ 536:
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var FluxConstant = __webpack_require__(375);
	
	module.exports = FluxConstant.set(['REGISTER', 'REGISTER_RESPONSE']);

/***/ },

/***/ 537:
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Constants = __webpack_require__(536);
	var ObjectAssign = __webpack_require__(23);
	var ParseValidation = __webpack_require__(378);
	var Redux = __webpack_require__(380);
	
	var initialState = {
	    loading: false,
	    success: false,
	    error: undefined,
	    hasError: {},
	    help: {}
	};
	var reducer = function reducer() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    var action = arguments[1];
	
	
	    if (action.type === Constants.REGISTER) {
	        return ObjectAssign({}, state, {
	            loading: true
	        });
	    }
	
	    if (action.type === Constants.REGISTER_RESPONSE) {
	        var validation = ParseValidation(action.response);
	
	        return ObjectAssign({}, state, {
	            loading: false,
	            success: !action.err,
	            error: validation.error,
	            hasError: validation.hasError,
	            help: validation.help
	        });
	    }
	
	    return state;
	};
	
	module.exports = Redux.createStore(reducer);

/***/ }

});
//# sourceMappingURL=signup.map.js